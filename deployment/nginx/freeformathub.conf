# FreeFormatHub Nginx Configuration
# Production-ready config for high-performance static site serving

server {
    listen 4600;
    listen [::]:4600;
    
    server_name localhost freeformathub.local;
    root /var/www/freeformathub;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy for enhanced security
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self';" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/xml
        text/plain
        text/html;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # CORS for fonts and assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
    }

    # Cache HTML files for shorter time
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
    }

    # Handle API endpoints
    location /api/ {
        try_files $uri $uri.json =404;
        add_header Content-Type application/json;
        expires 5m;
        add_header Cache-Control "public";
    }

    # Handle category-based tool routing: /tools/[category]/[tool]
    location ~ ^/tools/([^/]+)/([^/]+)/?$ {
        try_files /tools/$1/$2.html /tools/$1/$2/index.html =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    # Handle category landing pages: /tools/[category]
    location ~ ^/tools/([^/]+)/?$ {
        try_files /tools/$1.html /tools/$1/index.html =404;
        expires 1h; 
        add_header Cache-Control "public";
    }

    # Handle tools overview and search
    location /tools/ {
        try_files $uri $uri/ $uri.html /tools/index.html =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    # Dynamic sitemap
    location /sitemap.xml {
        try_files /sitemap.xml =404;
        add_header Content-Type application/xml;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Main location block
    location / {
        try_files $uri $uri/ $uri.html /index.html;
        
        # Cache homepage
        expires 30m;
        add_header Cache-Control "public";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup and config files
    location ~* \.(bak|conf|dist|fla|inc|ini|log|orig|psd|sh|sql|sw[op])$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Robots.txt
    location /robots.txt {
        alias /var/www/freeformathub/dist/robots.txt;
        expires 1d;
        add_header Cache-Control "public";
    }


    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Logging
    access_log /var/log/nginx/freeformathub_access.log;
    error_log /var/log/nginx/freeformathub_error.log;
}

# Redirect HTTP to HTTPS (if SSL is configured)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name freeformathub.com www.freeformathub.com;
#     return 301 https://$server_name$request_uri;
# }

# SSL Configuration (uncomment when ready for HTTPS)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name freeformathub.com www.freeformathub.com;
#     root /var/www/freeformathub;
#     index index.html;
#     
#     # SSL certificates (Let's Encrypt recommended)
#     ssl_certificate /etc/letsencrypt/live/freeformathub.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/freeformathub.com/privkey.pem;
#     
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_ecdh_curve secp384r1;
#     ssl_session_timeout 10m;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_tickets off;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # Include the rest of the server block configuration here
# }