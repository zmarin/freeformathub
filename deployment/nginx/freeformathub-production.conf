# FreeFormatHub Production Nginx Configuration
# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name freeformathub.com www.freeformathub.com;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name freeformathub.com www.freeformathub.com;
    root /var/www/freeformathub;
    index index.html;
    
    # SSL certificates (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/freeformathub.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/freeformathub.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy for enhanced security (Google Analytics and AdSense compatible)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.googlesyndication.com https://*.googletagmanager.com https://*.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: https://*.googlesyndication.com https://*.google-analytics.com; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://*.googlesyndication.com https://*.google-analytics.com https://*.analytics.google.com https://*.google.com; frame-src https://*.googlesyndication.com;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Cache control for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }

    # Cache control for HTML files
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
    }

    # Category-based routing for tools
    # Handle /tools/[category]/[tool]/ URLs
    location ~ ^/tools/([^/]+)/([^/]+)/?$ {
        try_files /tools/$1/$2.html /tools/$1/$2/index.html =404;
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Category landing pages
    # Handle /tools/[category]/ URLs
    location ~ ^/tools/([^/]+)/?$ {
        try_files /tools/$1.html /tools/$1/index.html =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    # Main tools page
    location /tools/ {
        try_files /tools.html /tools/index.html =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    # API endpoints
    location /api/ {
        try_files $uri $uri.json =404;
        expires 5m;
        add_header Cache-Control "public";
        add_header Content-Type "application/json";
    }

    # Sitemap and robots
    location = /sitemap.xml {
        try_files /sitemap.xml =404;
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "application/xml";
    }

    location = /robots.txt {
        try_files /robots.txt =404;
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "text/plain";
    }

    # Favicon
    location = /favicon.svg {
        try_files /favicon.svg =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "image/svg+xml";
    }

    # Web manifest
    location = /site.webmanifest {
        try_files /site.webmanifest =404;
        expires 1y;
        add_header Cache-Control "public";
        add_header Content-Type "application/json";
    }

    # Main site routing
    location / {
        try_files $uri $uri/ $uri.html /index.html =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to sensitive files
    location ~* \.(env|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Keep the development server for local testing
server {
    listen 4600;
    listen [::]:4600;
    
    server_name localhost freeformathub.local;
    root /var/www/freeformathub;
    index index.html;
    
    # Same configuration as HTTPS server but for local development
    include /etc/nginx/snippets/freeformathub-common.conf;
}