version: '3.8'

services:
  freeformathub:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    container_name: freeformathub
    restart: unless-stopped
    ports:
      - "4600:4600"
    environment:
      - NODE_ENV=production
    volumes:
      # Mount logs for persistent logging
      - nginx_logs:/var/log/nginx
      # Mount custom nginx config (optional override)
      - ./nginx/freeformathub.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - freeformathub_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.freeformathub.rule=Host(`freeformathub.local`)"
      - "traefik.http.services.freeformathub.loadbalancer.server.port=4600"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4600/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: freeformathub_prometheus
    restart: unless-stopped
    ports:
      - "4601:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - freeformathub_network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: freeformathub_grafana
    restart: unless-stopped
    ports:
      - "4602:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - freeformathub_network
    profiles:
      - monitoring

  # Optional: Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: freeformathub_redis
    restart: unless-stopped
    ports:
      - "4603:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    networks:
      - freeformathub_network
    profiles:
      - caching

networks:
  freeformathub_network:
    driver: bridge

volumes:
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local