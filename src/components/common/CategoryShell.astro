---
import type { ToolCategory, Tool } from '../../types';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getToolUrl, getCategoryUrl } from '../../lib/routing/category-routes';
import Icon from '../ui/Icon.tsx';

export interface Props {
  category: ToolCategory;
  tools: Tool[];
  children?: any;
}

const { category, tools } = Astro.props;
const safeTools = tools ?? [];
const baseUrl = 'https://freeformathub.com';

// Generate structured data for the category
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": category.name,
  "description": category.description,
  "mainEntity": {
    "@type": "ItemList",
    "name": `${category.name} Tools`,
    "description": `Free online ${category.name.toLowerCase()} tools for business and developers`,
    "numberOfItems": safeTools.length,
    "itemListElement": safeTools.map((tool, index) => ({
      "@type": "SoftwareApplication",
      "position": index + 1,
      "name": tool.name,
      "description": tool.description,
      "url": baseUrl + getToolUrl(tool),
      "applicationCategory": "BusinessApplication",
      "isAccessibleForFree": true
    }))
  },
  "breadcrumb": {
    "@type": "BreadcrumbList",
    "itemListElement": [
      {
        "@type": "ListItem",
        "position": 1,
        "name": "Home",
        "item": baseUrl
      },
      {
        "@type": "ListItem",
        "position": 2,
        "name": category.name,
        "item": baseUrl + getCategoryUrl(category)
      }
    ]
  }
};

const seoTitle = `${category.name} | Free Online Developer Tools | FreeFormatHub`;
const seoDescription = `${category.description}. ${safeTools.length} free online tools including ${safeTools.slice(0, 3).map(t => t.name).join(', ')} and more. All tools work offline with complete privacy.`;
---

<BaseLayout 
  title={seoTitle}
  description={seoDescription}
  keywords={[category.id, ...(safeTools.flatMap ? safeTools.flatMap(t => t.keywords) : [])]}
  jsonLd={jsonLd}
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Category Header -->
    <header class="mb-8">
      <div class="flex items-center gap-4 mb-4">
        <div class={`w-16 h-16 rounded-xl bg-${category.color}-100 dark:bg-${category.color}-900 flex items-center justify-center`}>
          <Icon name={category.icon} className={`text-${category.color}-600 dark:text-${category.color}-400`} size={28} />
        </div>
        <div>
          <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100">
            {category.name}
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-400 mt-2">
            {category.description}
          </p>
          <p class="text-sm text-gray-500 dark:text-gray-500 mt-1">
            {safeTools.length} tools available
          </p>
        </div>
      </div>
      
      <!-- Breadcrumb -->
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm">
          <li>
            <a href="/" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
              Home
            </a>
          </li>
          <li>
            <svg class="w-4 h-4 text-gray-400 mx-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </li>
          <li class="text-gray-900 dark:text-gray-100 font-medium">
            {category.name}
          </li>
        </ol>
      </nav>
    </header>

    <!-- Category Content -->
    <div class="mb-8">
      <slot />
    </div>

    <!-- Tools Grid -->
    <section>
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
        Available Tools
      </h2>
      <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        {safeTools.map(tool => (
          <a 
            href={getToolUrl(tool)}
            class="group block p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-200"
          >
            <div class="flex items-center gap-3 mb-3">
              <div class={`w-10 h-10 rounded-lg bg-${category.color}-100 dark:bg-${category.color}-900 flex items-center justify-center flex-shrink-0`}>
                <span class="text-lg">{tool.icon}</span>
              </div>
              <div class="min-w-0 flex-1">
                <h3 class="font-semibold text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors truncate">
                  {tool.name}
                </h3>
              </div>
            </div>
            <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-2">
              {tool.description}
            </p>
            <div class="flex items-center justify-between mt-4">
              <div class="flex flex-wrap gap-1">
                {(tool.keywords ?? []).slice(0, 2).map(keyword => (
                  <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded">
                    {keyword}
                  </span>
                ))}
              </div>
              <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-500 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </div>
          </a>
        ))}
      </div>
    </section>

    <!-- Category Features -->
    <section class="mt-12">
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
        Why Use Our {category.name}?
      </h2>
      <div class="grid gap-6 md:grid-cols-2">
        
        <div class="flex items-start gap-3">
          <div class="w-8 h-8 rounded-lg bg-blue-100 dark:bg-blue-900 flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5 text-blue-600 dark:text-blue-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </div>
          <div>
            <h3 class="font-medium text-gray-900 dark:text-gray-100 mb-1">
              Free Forever
            </h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              No registration, no limits, no hidden costs. Use all tools for free.
            </p>
          </div>
        </div>
        
        <div class="flex items-start gap-3">
          <div class="w-8 h-8 rounded-lg bg-purple-100 dark:bg-purple-900 flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5 text-purple-600 dark:text-purple-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd" />
            </svg>
          </div>
          <div>
            <h3 class="font-medium text-gray-900 dark:text-gray-100 mb-1">
              Lightning Fast
            </h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Instant processing with optimized algorithms and modern web tech.
            </p>
          </div>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
