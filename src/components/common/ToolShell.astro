---
import type { Tool } from '../../types';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getTool } from '../../lib/tools/registry';
import { getToolUrl } from '../../lib/routing/category-routes';
import AdPlacement from '../ads/AdPlacement.astro';

export interface Props {
  tool: Tool;
  children?: any;
}

const { tool } = Astro.props;

// Generate structured data for the tool
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "SoftwareApplication",
  "name": tool.name,
  "description": tool.description,
  "applicationCategory": "BusinessApplication",
  "operatingSystem": "Any",
  "permissions": "no-storage",
  "isAccessibleForFree": true,
  "creator": {
    "@type": "Organization",
    "name": "FreeFormatHub"
  },
  "offers": {
    "@type": "Offer",
    "price": "0",
    "priceCurrency": "USD"
  },
  "breadcrumb": {
    "@type": "BreadcrumbList",
    "itemListElement": [
      { "@type": "ListItem", "position": 1, "name": "Home", "item": "/" },
      { "@type": "ListItem", "position": 2, "name": tool.category?.name || 'Category', "item": `/${tool.category?.id || ''}` },
      { "@type": "ListItem", "position": 3, "name": tool.name, "item": `/${tool.category?.id || ''}/${tool.slug}` }
    ]
  }
};

// Add FAQ structured data if available
if (tool.faq && tool.faq.length > 0) {
  jsonLd.mainEntity = {
    "@type": "FAQPage",
    "mainEntity": tool.faq.map((faqItem: any) => ({
      "@type": "Question",
      "name": faqItem.question,
      "acceptedAnswer": {
        "@type": "Answer",
        "text": faqItem.answer
      }
    }))
  };
}
---

<BaseLayout
  title={tool.seoTitle}
  description={tool.seoDescription}
  keywords={tool.keywords}
  jsonLd={jsonLd}
>
  <!-- Tool Header Section -->
  <section style="background-color: var(--color-surface); border-bottom: 1px solid var(--color-border);">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">

      <!-- Breadcrumb Navigation -->
      <nav class="mb-8" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm">
          <li>
            <a href="/" style="color: var(--color-text-secondary);" class="hover:text-blue-600 transition-colors">
              Home
            </a>
          </li>
          <li>
            <svg class="w-4 h-4 mx-2" style="color: var(--color-text-muted);" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </li>
          <li>
            <a href={`/${tool.category?.id || 'unknown'}`} style="color: var(--color-text-secondary);" class="hover:text-blue-600 transition-colors">
              {tool.category?.name || 'Unknown'}
            </a>
          </li>
          <li>
            <svg class="w-4 h-4 mx-2" style="color: var(--color-text-muted);" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </li>
          <li style="color: var(--color-text-primary); font-weight: 600;">
            {tool.name}
          </li>
        </ol>
      </nav>

      <!-- Tool Title & Description -->
      <header class="mb-8">
        <div class="flex items-start gap-6">
          <!-- Tool Icon -->
          <div class="card" style="
            width: 64px;
            height: 64px;
            background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.75rem;
            color: white;
            flex-shrink: 0;
          ">
            {tool.icon}
          </div>

          <div class="flex-1">
            <!-- Tool Title -->
            <h1 style="
              font-size: 2.5rem;
              font-weight: 700;
              color: var(--color-text-primary);
              margin-bottom: var(--space-lg);
              line-height: 1.2;
            ">
              {tool.name}
            </h1>

            <!-- Tool Description -->
            <p style="
              font-size: 1.125rem;
              color: var(--color-text-secondary);
              line-height: 1.6;
              max-width: 800px;
              margin-bottom: var(--space-xl);
            ">
              {tool.description}
            </p>
          </div>
        </div>
      </header>

    </div>
  </section>

  <!-- Main Content Area -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Tool Interface Container -->
    <div class="card" style="margin-bottom: var(--space-3xl); overflow: hidden;">
      <slot />
    </div>

    <!-- How It Works Section - Collapsible -->
    <div class="card" style="margin-bottom: var(--space-3xl);">
      <details class="group">
        <summary style="
          display: flex;
          justify-content: space-between;
          align-items: center;
          cursor: pointer;
          padding: var(--space-2xl);
          border-bottom: 1px solid var(--color-border);
          background-color: var(--color-surface-secondary);
          border-radius: var(--radius-xl) var(--radius-xl) 0 0;
        ">
          <h2 style="font-size: 1.75rem; font-weight: 700; color: var(--color-text-primary);">
            How It Works
          </h2>
          <svg class="w-6 h-6 group-open:rotate-180 transition-transform" style="color: var(--color-text-secondary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </summary>
        <div style="padding: var(--space-2xl);">

        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: var(--space-2xl);">
          {tool.howItWorks && tool.howItWorks.length > 0 ? (
            tool.howItWorks.map((step: any, index: number) => (
              <div style="display: flex; align-items: flex-start; gap: var(--space-lg);">
                <div style={`
                  width: 48px;
                  height: 48px;
                  background-color: var(--color-primary-light);
                  border-radius: var(--radius-lg);
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  flex-shrink: 0;
                  font-size: 1.5rem;
                `}>
                  {step.icon}
                </div>
                <div>
                  <h3 style="font-weight: 600; margin-bottom: var(--space-sm); color: var(--color-text-primary);">
                    {step.title}
                  </h3>
                  <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                    {step.description}
                  </p>
                </div>
              </div>
            ))
          ) : (
            <>
              <!-- Fallback: Privacy First -->
              <div style="display: flex; align-items: flex-start; gap: var(--space-lg);">
                <div style="
                  width: 48px;
                  height: 48px;
                  background-color: var(--color-secondary-light);
                  border-radius: var(--radius-lg);
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  flex-shrink: 0;
                ">
                  <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" style="color: var(--color-secondary);">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                  </svg>
                </div>
                <div>
                  <h3 style="font-weight: 600; margin-bottom: var(--space-sm); color: var(--color-text-primary);">
                    Input Your Data
                  </h3>
                  <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                    Paste, type, or upload your data directly into the {tool.name.toLowerCase()}.
                    All processing happens locally in your browser for complete privacy and security.
                  </p>
                </div>
              </div>

              <!-- Fallback: Lightning Fast -->
              <div style="display: flex; align-items: flex-start; gap: var(--space-lg);">
                <div style="
                  width: 48px;
                  height: 48px;
                  background-color: var(--color-primary-light);
                  border-radius: var(--radius-lg);
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  flex-shrink: 0;
                ">
                  <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" style="color: var(--color-primary);">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                  </svg>
                </div>
                <div>
                  <h3 style="font-weight: 600; margin-bottom: var(--space-sm); color: var(--color-text-primary);">
                    Configure Options
                  </h3>
                  <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                    Customize the tool settings to match your specific needs.
                    Real-time processing with instant validation and error detection.
                  </p>
                </div>
              </div>

              {tool.useCases && tool.useCases.length > 0 && (
                <div style="display: flex; align-items: flex-start; gap: var(--space-lg);">
                  <div style="
                    width: 48px;
                    height: 48px;
                    background-color: var(--color-accent-light);
                    border-radius: var(--radius-lg);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    flex-shrink: 0;
                  ">
                    <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" style="color: var(--color-accent);">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>
                    </svg>
                  </div>
                  <div>
                    <h3 style="font-weight: 600; margin-bottom: var(--space-sm); color: var(--color-text-primary);">
                      Process Instantly
                    </h3>
                    <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                      Click the process button or enable auto-processing for real-time results.
                      Lightning-fast performance with immediate feedback and validation.
                    </p>
                  </div>
                </div>
              )}

              <!-- Fallback: Export Results -->
              <div style="display: flex; align-items: flex-start; gap: var(--space-lg);">
                <div style="
                  width: 48px;
                  height: 48px;
                  background-color: var(--color-warning-light);
                  border-radius: var(--radius-lg);
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  flex-shrink: 0;
                ">
                  <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" style="color: var(--color-warning);">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"/>
                  </svg>
                </div>
                <div>
                  <h3 style="font-weight: 600; margin-bottom: var(--space-sm); color: var(--color-text-primary);">
                    Export Results
                  </h3>
                  <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                    Copy results to clipboard, download as files, or share with others.
                    Multiple export formats available for maximum compatibility.
                  </p>
                </div>
              </div>
            </>
          )}
        </div>
      </details>
    </div>

    <!-- Problems It Solves Section - Collapsible -->
    {tool.problemsSolved && tool.problemsSolved.length > 0 && (
      <div class="card" style="margin-bottom: var(--space-3xl);">
        <details class="group">
          <summary style="
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            padding: var(--space-2xl);
            border-bottom: 1px solid var(--color-border);
            background-color: var(--color-surface-secondary);
            border-radius: var(--radius-xl) var(--radius-xl) 0 0;
          ">
            <h2 style="font-size: 1.75rem; font-weight: 700; color: var(--color-text-primary);">
              Problems It Solves
            </h2>
            <svg class="w-6 h-6 group-open:rotate-180 transition-transform" style="color: var(--color-text-secondary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </summary>
          <div style="padding: var(--space-2xl);">

          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: var(--space-2xl);">
            {tool.problemsSolved.map((item: any, index: number) => (
              <div style="display: flex; flex-direction: column; gap: var(--space-lg); padding: var(--space-lg); border-radius: var(--radius-lg); background-color: var(--color-surface-secondary);">
                <div style="display: flex; align-items: center; gap: var(--space-md);">
                  <div style="
                    width: 40px;
                    height: 40px;
                    background-color: var(--color-danger-light);
                    border-radius: var(--radius-lg);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    flex-shrink: 0;
                    font-size: 1.25rem;
                  ">
                    {item.icon}
                  </div>
                  <h3 style="font-weight: 600; color: var(--color-text-primary); font-size: 1rem;">
                    Problem
                  </h3>
                </div>
                <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6; margin-bottom: var(--space-md);">
                  {item.problem}
                </p>

                <div style="display: flex; align-items: center; gap: var(--space-md);">
                  <div style="
                    width: 40px;
                    height: 40px;
                    background-color: var(--color-success-light);
                    border-radius: var(--radius-lg);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    flex-shrink: 0;
                  ">
                    <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" style="color: var(--color-success);">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4"/>
                    </svg>
                  </div>
                  <h4 style="font-weight: 600; color: var(--color-text-primary); font-size: 1rem;">
                    Solution
                  </h4>
                </div>
                <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                  {item.solution}
                </p>
              </div>
            ))}
          </div>
        </div>
      </details>
    </div>
    )}

    <!-- Why Choose This Tool Section - Collapsible -->
    {tool.whyChoose && tool.whyChoose.length > 0 && (
      <div class="card" style="margin-bottom: var(--space-3xl);">
        <details class="group" open>
          <summary style="
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            padding: var(--space-2xl);
            border-bottom: 1px solid var(--color-border);
            background-color: var(--color-surface-secondary);
            border-radius: var(--radius-xl) var(--radius-xl) 0 0;
          ">
            <h2 style="font-size: 1.75rem; font-weight: 700; color: var(--color-text-primary);">
              Why Choose This Tool
            </h2>
            <svg class="w-6 h-6 group-open:rotate-180 transition-transform" style="color: var(--color-text-secondary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </summary>
          <div style="padding: var(--space-2xl);">

          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: var(--space-2xl);">
            {tool.whyChoose.map((benefit: any, index: number) => (
              <div style="display: flex; align-items: flex-start; gap: var(--space-lg);">
                <div style="
                  width: 48px;
                  height: 48px;
                  background: linear-gradient(135deg, var(--color-accent-light), var(--color-accent));
                  border-radius: var(--radius-lg);
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  flex-shrink: 0;
                  font-size: 1.25rem;
                ">
                  {benefit.icon}
                </div>
                <div>
                  <h3 style="font-weight: 600; margin-bottom: var(--space-sm); color: var(--color-text-primary);">
                    {benefit.title}
                  </h3>
                  <p style="color: var(--color-text-secondary); font-size: 0.875rem; line-height: 1.6;">
                    {benefit.description}
                  </p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </details>
    </div>
    )}

    <!-- In-Content Ad -->
    <div class="card" style="background-color: var(--color-surface-secondary); border: 2px dashed var(--color-border); text-align: center; padding: var(--space-2xl); margin-bottom: var(--space-3xl);">
      <AdPlacement type="content" lazy={true} />
    </div>

    <!-- FAQ Section - Collapsible -->
    {(tool.faq?.length ?? 0) > 0 && (
      <div class="card" style="margin-bottom: var(--space-3xl);">
        <details class="group">
          <summary style="
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            padding: var(--space-2xl);
            border-bottom: 1px solid var(--color-border);
            background-color: var(--color-surface-secondary);
            border-radius: var(--radius-xl) var(--radius-xl) 0 0;
          ">
            <h2 style="font-size: 1.75rem; font-weight: 700; color: var(--color-text-primary);">
              Frequently Asked Questions
            </h2>
            <svg class="w-6 h-6 group-open:rotate-180 transition-transform" style="color: var(--color-text-secondary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </summary>
          <div style="padding: var(--space-2xl);">
            <div style="display: grid; gap: var(--space-lg);">
              {tool.faq?.map((faqItem: any, index: number) => (
                <details class="group">
                  <summary style="
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    cursor: pointer;
                    padding: var(--space-lg);
                    background-color: var(--color-surface-secondary);
                    border-radius: var(--radius-lg);
                    transition: background-color var(--transition-fast);
                  " class="hover:bg-gray-100 dark:hover:bg-gray-700">
                    <span style="font-weight: 600; color: var(--color-text-primary);">
                      {faqItem.question}
                    </span>
                    <svg class="w-4 h-4 group-open:rotate-180 transition-transform" style="color: var(--color-text-secondary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                  </summary>
                  <div style="padding: var(--space-lg); color: var(--color-text-secondary); line-height: 1.6;">
                    {faqItem.answer}
                  </div>
                </details>
              ))}
            </div>
          </div>
        </details>
      </div>
    )}

    <!-- Related Tools -->
    {(tool.relatedTools?.length ?? 0) > 0 && (
      <div class="card" style="margin-bottom: var(--space-3xl);">
        <div class="card-body">
          <h2 style="font-size: 1.75rem; font-weight: 700; color: var(--color-text-primary); margin-bottom: var(--space-2xl);">
            Related Tools
          </h2>
          <div style="display: flex; gap: var(--space-lg); overflow-x: auto; padding-bottom: var(--space-lg);">
            {tool.relatedTools?.map((relatedToolId: string) => {
              const t = getTool(relatedToolId);
              const href = t ? getToolUrl(t) : '/search';
              const name = t?.name || relatedToolId.replace('-', ' ').replace(/\b\w/g, (l: string) => l.toUpperCase());
              const description = t?.description || 'Related tool';
              return (
                <a href={href} class="card" style="
                  flex: none;
                  width: 280px;
                  text-decoration: none;
                  transition: all var(--transition-fast);
                " class="hover:shadow-md">
                  <div class="card-body">
                    <div style="display: flex; align-items: center; gap: var(--space-md); margin-bottom: var(--space-md);">
                      <div style="
                        width: 40px;
                        height: 40px;
                        background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
                        border-radius: var(--radius-lg);
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        color: white;
                        font-size: 1.125rem;
                        flex-shrink: 0;
                      ">
                        {t?.icon || '🔧'}
                      </div>
                      <div style="font-weight: 600; color: var(--color-text-primary); font-size: 0.875rem;">
                        {name}
                      </div>
                    </div>
                    <p style="color: var(--color-text-secondary); font-size: 0.75rem; line-height: 1.5;">
                      {description}
                    </p>
                  </div>
                </a>
              );
            })}
          </div>
        </div>
      </div>
    )}

    <!-- Footer Ad -->
    <div class="card" style="background-color: var(--color-surface-secondary); border: 2px dashed var(--color-border); text-align: center; padding: var(--space-2xl);">
      <AdPlacement type="footer" lazy={true} />
    </div>
  </div>
</BaseLayout>
