---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout
  title="Tech News & Developer Insights - FreeFormatHub"
  description="Stay updated with the latest technology trends, developer discussions, and insights from the Hacker News community. Curated tech news for developers."
  keywords="tech news, developer news, hacker news, programming trends, software development, tech insights"
>
  <div class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <div class="bg-gradient-to-br from-blue-600 via-purple-600 to-purple-700 text-white py-16">
      <div class="max-w-6xl mx-auto px-4">
        <div class="text-center">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">üì∞ Tech News & Developer Insights</h1>
          <p class="text-xl md:text-2xl mb-6 text-blue-100">
            Curated discussions from the developer community
          </p>
          <p class="text-lg text-blue-200 max-w-2xl mx-auto">
            Stay ahead with trending topics, breakthrough technologies, and insightful discussions
            from Hacker News and the global developer community.
          </p>
        </div>
      </div>
    </div>

    <!-- News Content -->
    <div class="max-w-6xl mx-auto px-4 py-12">
      <div id="news-content" class="space-y-8">
        <!-- Loading state -->
        <div class="text-center py-8">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
          <p class="mt-2 text-gray-600">Loading latest tech discussions...</p>
        </div>
      </div>

      <!-- Categories Filter -->
      <div class="mb-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Browse by Category</h2>
        <div class="flex flex-wrap gap-3">
          <button class="category-filter active bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors" data-category="all">
            All Stories
          </button>
          <button class="category-filter bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors" data-category="ai">
            ü§ñ AI & ML
          </button>
          <button class="category-filter bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors" data-category="web">
            üåê Web Dev
          </button>
          <button class="category-filter bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors" data-category="startup">
            üöÄ Startups
          </button>
          <button class="category-filter bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors" data-category="security">
            üîí Security
          </button>
          <button class="category-filter bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors" data-category="tools">
            üõ†Ô∏è Dev Tools
          </button>
        </div>
      </div>

      <!-- News Grid will be populated by JavaScript -->
      <div id="news-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Articles will be inserted here -->
      </div>

      <!-- Load More Button -->
      <div class="text-center mt-12">
        <button id="load-more" class="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-3 rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 shadow-lg">
          Load More Stories
        </button>
      </div>
    </div>

    <!-- Attribution -->
    <div class="bg-gray-100 py-8">
      <div class="max-w-6xl mx-auto px-4 text-center">
        <p class="text-gray-600">
          Content curated from <a href="https://news.ycombinator.com" target="_blank" rel="noopener" class="text-blue-600 hover:text-blue-800 font-medium">Hacker News</a> ‚Ä¢
          All stories link back to original discussions ‚Ä¢
          <a href="https://github.com/HackerNews/API" target="_blank" rel="noopener" class="text-blue-600 hover:text-blue-800">API Documentation</a>
        </p>
      </div>
    </div>
  </div>

  <script>
    // Hacker News API integration
    const HN_API_BASE = 'https://hacker-news.firebaseio.com/v0';
    let currentStories = [];
    let displayedCount = 0;
    const STORIES_PER_LOAD = 12;

    // Category keywords for filtering
    const CATEGORIES = {
      ai: ['AI', 'Machine Learning', 'ML', 'GPT', 'OpenAI', 'ChatGPT', 'Neural', 'Deep Learning', 'LLM', 'Artificial Intelligence'],
      web: ['React', 'JavaScript', 'TypeScript', 'CSS', 'HTML', 'Vue', 'Angular', 'Frontend', 'Backend', 'Next.js'],
      startup: ['Startup', 'YC', 'Funding', 'Series A', 'Venture', 'IPO', 'Acquisition', 'Founder', 'Business'],
      security: ['Security', 'Vulnerability', 'Hack', 'Breach', 'Privacy', 'Encryption', 'Cyber', 'Bug Bounty'],
      tools: ['GitHub', 'VS Code', 'Docker', 'Kubernetes', 'AWS', 'CLI', 'API', 'Framework', 'Library', 'Tool']
    };

    async function fetchTopStories() {
      try {
        const response = await fetch(`${HN_API_BASE}/topstories.json`);
        const storyIds = await response.json();
        return storyIds.slice(0, 50); // Get top 50 stories
      } catch (error) {
        console.error('Error fetching stories:', error);
        return [];
      }
    }

    async function fetchStory(id) {
      try {
        const response = await fetch(`${HN_API_BASE}/item/${id}.json`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching story:', error);
        return null;
      }
    }

    function categorizeStory(title, url = '') {
      const text = (title + ' ' + url).toLowerCase();
      for (const [category, keywords] of Object.entries(CATEGORIES)) {
        if (keywords.some(keyword => text.includes(keyword.toLowerCase()))) {
          return category;
        }
      }
      return 'general';
    }

    function timeAgo(timestamp) {
      const now = Math.floor(Date.now() / 1000);
      const diff = now - timestamp;

      if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;
      if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;
      return `${Math.floor(diff / 86400)}d ago`;
    }

    function createStoryCard(story) {
      const category = categorizeStory(story.title, story.url);
      const domain = story.url ? new URL(story.url).hostname.replace('www.', '') : 'news.ycombinator.com';

      return `
        <article class="story-card bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-gray-100" data-category="${category}">
          <div class="flex items-start justify-between mb-3">
            <span class="category-badge bg-gradient-to-r from-blue-500 to-purple-600 text-white text-xs px-3 py-1 rounded-full font-medium">
              ${getCategoryIcon(category)} ${category.toUpperCase()}
            </span>
            <span class="text-sm text-gray-500">${timeAgo(story.time)}</span>
          </div>

          <h3 class="text-lg font-bold text-gray-800 mb-3 line-clamp-2 leading-tight">
            <a href="${story.url || `https://news.ycombinator.com/item?id=${story.id}`}"
               target="_blank"
               rel="noopener"
               class="hover:text-blue-600 transition-colors">
              ${story.title}
            </a>
          </h3>

          <div class="flex items-center justify-between text-sm text-gray-600">
            <div class="flex items-center space-x-4">
              <span class="flex items-center">
                <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                ${story.score || 0} points
              </span>
              <span class="flex items-center">
                <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"></path>
                </svg>
                <a href="https://news.ycombinator.com/item?id=${story.id}" target="_blank" rel="noopener" class="hover:text-blue-600">
                  ${story.descendants || 0} comments
                </a>
              </span>
            </div>
            <span class="text-blue-600 font-medium">${domain}</span>
          </div>

          <div class="mt-4 pt-3 border-t border-gray-100">
            <p class="text-xs text-gray-500 mb-2">by ${story.by}</p>
            <div class="flex justify-between items-center">
              <a href="https://news.ycombinator.com/item?id=${story.id}"
                 target="_blank"
                 rel="noopener"
                 class="text-sm text-blue-600 hover:text-blue-800 font-medium">
                View Discussion ‚Üí
              </a>
              ${story.url ? `<a href="${story.url}" target="_blank" rel="noopener" class="text-sm text-gray-600 hover:text-gray-800">Read Article</a>` : ''}
            </div>
          </div>
        </article>
      `;
    }

    function getCategoryIcon(category) {
      const icons = {
        ai: 'ü§ñ',
        web: 'üåê',
        startup: 'üöÄ',
        security: 'üîí',
        tools: 'üõ†Ô∏è',
        general: 'üì∞'
      };
      return icons[category] || 'üì∞';
    }

    async function loadStories() {
      const newsContent = document.getElementById('news-content');
      const newsGrid = document.getElementById('news-grid');

      if (currentStories.length === 0) {
        // First load
        const storyIds = await fetchTopStories();
        const storyPromises = storyIds.map(id => fetchStory(id));
        const stories = await Promise.all(storyPromises);
        currentStories = stories.filter(story => story && story.title && story.type === 'story');

        // Hide loading state
        newsContent.innerHTML = '';
      }

      // Display next batch of stories
      const startIndex = displayedCount;
      const endIndex = Math.min(displayedCount + STORIES_PER_LOAD, currentStories.length);
      const storiesToShow = currentStories.slice(startIndex, endIndex);

      const storyCards = storiesToShow.map(story => createStoryCard(story)).join('');
      newsGrid.insertAdjacentHTML('beforeend', storyCards);

      displayedCount = endIndex;

      // Hide load more button if no more stories
      const loadMoreBtn = document.getElementById('load-more');
      if (displayedCount >= currentStories.length) {
        loadMoreBtn.style.display = 'none';
      }
    }

    // Category filtering
    function setupCategoryFilters() {
      const filterButtons = document.querySelectorAll('.category-filter');
      filterButtons.forEach(button => {
        button.addEventListener('click', () => {
          // Update active state
          filterButtons.forEach(btn => {
            btn.classList.remove('active', 'bg-blue-600', 'text-white');
            btn.classList.add('bg-gray-200', 'text-gray-700');
          });
          button.classList.add('active', 'bg-blue-600', 'text-white');
          button.classList.remove('bg-gray-200', 'text-gray-700');

          // Filter stories
          const category = button.dataset.category;
          const storyCards = document.querySelectorAll('.story-card');

          storyCards.forEach(card => {
            if (category === 'all' || card.dataset.category === category) {
              card.style.display = 'block';
            } else {
              card.style.display = 'none';
            }
          });
        });
      });
    }

    // Initialize
    document.addEventListener('DOMContentLoaded', () => {
      loadStories();
      setupCategoryFilters();

      // Load more button
      document.getElementById('load-more').addEventListener('click', loadStories);
    });
  </script>

  <style>
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .story-card:hover {
      transform: translateY(-2px);
    }

    .category-badge {
      backdrop-filter: blur(10px);
    }
  </style>
</BaseLayout>