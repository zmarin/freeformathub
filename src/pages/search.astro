---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getAllTools, TOOL_CATEGORIES } from '../lib/tools/registry';
import { searchToolsAdvanced } from '../lib/routing/category-routes';

// Get search parameters from URL
const url = new URL(Astro.request.url);
const query = url.searchParams.get('q') || '';
const categoryFilter = url.searchParams.get('category') || '';

// Perform search
const searchResults = query ? searchToolsAdvanced(query, { 
  category: categoryFilter || undefined 
}) : [];

const allTools = getAllTools();
const totalTools = allTools.length;

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "SearchResultsPage",
  "name": `Search Results for "${query}" | FreeFormatHub`,
  "description": `Search results for "${query}" across ${totalTools} business and developer tools`,
  "potentialAction": {
    "@type": "SearchAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": "/search?q={search_term_string}"
    },
    "query-input": "required name=search_term_string"
  }
};
---

<BaseLayout 
  title={query ? `Search Results for "${query}" | FreeFormatHub` : 'Search Business & Developer Tools | FreeFormatHub'}
  description={query ? `Found ${searchResults.length} tools matching "${query}". Search across ${totalTools} free business and developer tools.` : `Search across ${totalTools} free business and developer tools for formatting, converting, encoding, and validating data.`}
  keywords={['search tools', 'find business tools', 'find developer tools', 'tool finder', 'productivity tools', query]}
  jsonLd={jsonLd}
  robotsContent="noindex, follow"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Search Header -->
    <header class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
        {query ? `Search Results for "${query}"` : 'Search Business & Developer Tools'}
      </h1>
      
      <!-- Search Form -->
      <form action="/search" method="get" class="max-w-2xl">
        <div class="flex gap-4 mb-4">
          <div class="flex-1">
            <input
              type="text"
              name="q"
              value={query}
              placeholder="Search tools... (e.g., json formatter, base64, color converter)"
              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:text-gray-100"
            />
          </div>
          <button
            type="submit"
            class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors"
          >
            Search
          </button>
        </div>
        
        <!-- Category Filter -->
        <div class="flex items-center gap-4">
          <label class="text-sm font-medium text-gray-700 dark:text-gray-300">
            Filter by category:
          </label>
          <select 
            name="category" 
            class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-800 dark:text-gray-100"
            onchange="this.form.submit()"
          >
            <option value="">All Categories</option>
            {TOOL_CATEGORIES.map(category => (
              <option value={category.id} selected={categoryFilter === category.id}>
                {category.name}
              </option>
            ))}
          </select>
        </div>
      </form>
    </header>

    <!-- Search Results -->
    {query && (
      <section>
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100">
            Found {searchResults.length} result{searchResults.length !== 1 ? 's' : ''}
          </h2>
          
          {categoryFilter && (
            <div class="flex items-center gap-2">
              <span class="text-sm text-gray-600 dark:text-gray-400">in</span>
              <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm">
                {TOOL_CATEGORIES.find(cat => cat.id === categoryFilter)?.name}
              </span>
              <a 
                href={`/search?q=${encodeURIComponent(query)}`}
                class="text-sm text-blue-600 dark:text-blue-400 hover:underline"
              >
                Clear filter
              </a>
            </div>
          )}
        </div>

        {searchResults.length > 0 ? (
          <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
            {searchResults.map(tool => (
              <a 
                href={`/${tool.category.id}/${tool.slug}`}
                class="group block p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-200"
              >
                <div class="flex items-center gap-3 mb-3">
                  <div class={`w-10 h-10 rounded-lg bg-${tool.category.color}-100 dark:bg-${tool.category.color}-900 flex items-center justify-center flex-shrink-0`}>
                    <span class="text-lg">{tool.icon}</span>
                  </div>
                  <div class="min-w-0 flex-1">
                    <h3 class="font-semibold text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors truncate">
                      {tool.name}
                    </h3>
                    <p class="text-xs text-gray-500 dark:text-gray-400">{tool.category.name}</p>
                  </div>
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-2 mb-3">
                  {tool.description}
                </p>
                <div class="flex flex-wrap gap-1">
                  {(tool.keywords ?? []).slice(0, 3).map(keyword => (
                    <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded">
                      {keyword}
                    </span>
                  ))}
                </div>
              </a>
            ))}
          </div>
        ) : (
          <div class="text-center py-12">
            <div class="w-16 h-16 bg-gray-100 dark:bg-gray-800 rounded-xl flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-2">
              No tools found
            </h3>
            <p class="text-gray-600 dark:text-gray-400 mb-4">
              Try adjusting your search terms or browse by category.
            </p>
            <a 
              href="/search"
              class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"
            >
              Browse All Tools
            </a>
          </div>
        )}
      </section>
    )}

    <!-- Popular Searches / Suggestions -->
    {!query && (
      <section class="mt-12">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
          Popular Searches
        </h2>
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          <div class="p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
            <h3 class="font-medium text-gray-900 dark:text-gray-100 mb-2">Data Formatting</h3>
            <div class="flex flex-wrap gap-2">
              {['json formatter', 'xml formatter', 'yaml formatter', 'csv formatter'].map(term => (
                <a 
                  href={`/search?q=${encodeURIComponent(term)}`}
                  class="text-sm text-blue-600 dark:text-blue-400 hover:underline"
                >
                  {term}
                </a>
              ))}
            </div>
          </div>
          
          <div class="p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
            <h3 class="font-medium text-gray-900 dark:text-gray-100 mb-2">Encoding & Decoding</h3>
            <div class="flex flex-wrap gap-2">
              {['base64', 'url encoder', 'jwt decoder', 'html entities'].map(term => (
                <a 
                  href={`/search?q=${encodeURIComponent(term)}`}
                  class="text-sm text-blue-600 dark:text-blue-400 hover:underline"
                >
                  {term}
                </a>
              ))}
            </div>
          </div>
          
          <div class="p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
            <h3 class="font-medium text-gray-900 dark:text-gray-100 mb-2">Data Conversion</h3>
            <div class="flex flex-wrap gap-2">
              {['json to csv', 'color converter', 'image converter', 'timestamp'].map(term => (
                <a 
                  href={`/search?q=${encodeURIComponent(term)}`}
                  class="text-sm text-blue-600 dark:text-blue-400 hover:underline"
                >
                  {term}
                </a>
              ))}
            </div>
          </div>
        </div>
      </section>
    )}
  </div>
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
