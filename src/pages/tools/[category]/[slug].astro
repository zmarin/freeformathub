---
import { getToolStaticPaths } from '../../../lib/routing/category-routes';
import ToolShell from '../../../components/common/ToolShell.astro';

export async function getStaticPaths() {
  return getToolStaticPaths();
}

const { category, slug } = Astro.params;
const { tool } = Astro.props;

if (!tool) {
  return Astro.redirect('/404');
}

// Dynamically import the tool component based on category and tool name
const componentName = tool.name
  .split(' ')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
  .join('')
  .replace(/[^a-zA-Z0-9]/g, '');

let ToolComponent;
try {
  const componentModule = await import(`../../../components/tools/${category}/${componentName}.tsx`);
  ToolComponent = componentModule.default;
} catch (error) {
  console.error(`Failed to load component for ${tool.name}:`, error);
  // Fallback to a generic error component or message
  return Astro.redirect('/404');
}
---

<ToolShell tool={tool}>
  <ToolComponent client:load />
</ToolShell>