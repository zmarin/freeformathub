---
import '../styles/global.css';
import ToolSearch from '../components/ui/ToolSearch.tsx';
import CookieConsent from '../components/CookieConsent.tsx';
import AdPlacement from '../components/ads/AdPlacement.astro';
import { LogoLink } from '../components/ui/Logo.tsx';

export interface Props {
  title: string;
  description: string;
  keywords?: string[];
  canonical?: string;
  ogImage?: string;
  jsonLd?: Record<string, any>;
  robotsContent?: string;
}

const { 
  title, 
  description, 
  keywords = [],
  canonical,
  ogImage,
  jsonLd,
  robotsContent
} = Astro.props;

// Prefer configured site from astro.config, fall back to production domain
const siteUrl = Astro.site?.href || 'https://freeformathub.com';
const fullTitle = title === 'FreeFormatHub' ? title : `${title} | FreeFormatHub`;
// Normalize canonical to prefer new URL structure without the /tools prefix
const rawPath = Astro.url.pathname;
const normalizedPath = rawPath.startsWith('/tools/')
  ? rawPath.replace(/^\/tools\//, '/')
  : rawPath;
const canonicalURL = canonical || new URL(normalizedPath, siteUrl).href;
const imageUrl = ogImage || new URL('/og-image.png', siteUrl).href;
const ogLocale = 'en_US';
const twitterSite = '@freeformathub';
const robots = robotsContent || 'index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1';
---

<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{fullTitle}</title>
    <meta name="title" content={fullTitle} />
    <meta name="description" content={description} />
    {keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="manifest" href="/site.webmanifest" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="FreeFormatHub" />
    <meta property="og:locale" content={ogLocale} />
    <meta property="og:image:alt" content={fullTitle} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={fullTitle} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageUrl} />
    <meta name="twitter:site" content={twitterSite} />
    
    <!-- Theme -->
    <meta name="theme-color" content="#3b82f6" />
    <meta name="color-scheme" content="light dark" />
    
    <!-- Preload critical resources (restore when asset exists) -->
    
    <!-- JSON-LD Structured Data -->
    {jsonLd && (
      <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
    )}
    
    <!-- Performance + robots -->
    <meta name="format-detection" content="telephone=no" />
    <meta name="robots" content={robots} />

    <!-- Google AdSense Site Verification -->
    <meta name="google-adsense-account" content={import.meta.env.PUBLIC_ADSENSE_CLIENT_ID} />
    {import.meta.env.PUBLIC_ADSENSE_VERIFICATION && (
      <meta name="google-site-verification" content={import.meta.env.PUBLIC_ADSENSE_VERIFICATION} />
    )}

    <!-- Google Consent Mode v2 (must load before gtag) -->
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}

      // Set default consent state (GDPR compliant - deny all)
      gtag('consent', 'default', {
        'ad_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied',
        'analytics_storage': 'denied'
      });
    </script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-34Z7YVSEZ2"></script>
    <script>
      // Ensure gtag is available before calling
      window.addEventListener('load', function() {
        if (typeof gtag !== 'undefined') {
          gtag('js', new Date());
          gtag('config', 'G-34Z7YVSEZ2');
        }
      });
    </script>

    <!-- Google AdSense Auto ads - Consent-aware loading -->
    <script>
      (function() {
        // Function to load AdSense when consent is granted
        function loadAdSense() {
          if (document.getElementById('adsense-script')) return; // Already loaded

          const clientId = import.meta.env.PUBLIC_ADSENSE_CLIENT_ID;
          if (!clientId || clientId === 'ca-pub-placeholder') {
            console.warn('AdSense client ID not properly configured');
            return;
          }

          const script = document.createElement('script');
          script.id = 'adsense-script';
          script.async = true;
          script.src = `https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=${clientId}`;
          script.crossOrigin = 'anonymous';
          document.head.appendChild(script);

          // Initialize adsbygoogle array
          window.adsbygoogle = window.adsbygoogle || [];
        }

        // Check consent on page load
        function checkConsent() {
          try {
            const consentData = localStorage.getItem('freeformathub_consent');
            if (consentData) {
              const consent = JSON.parse(consentData);
              if (consent.state && consent.state.marketing) {
                loadAdSense();
              }
            }
          } catch (error) {
            console.warn('Error checking consent:', error);
          }
        }

        // Check consent immediately
        checkConsent();

        // Listen for consent changes
        window.addEventListener('storage', function(e) {
          if (e.key === 'freeformathub_consent') {
            checkConsent();
          }
        });

        // Also listen for custom consent events
        window.addEventListener('consentChanged', function(e) {
          if (e.detail && e.detail.marketing) {
            loadAdSense();
          }
        });
      })();
    </script>

    <!-- Early theme init to prevent FOUC -->
    <script>
      (function() {
        const html = document.documentElement;
        const systemDarkQuery = window.matchMedia('(prefers-color-scheme: dark)');
        const getSaved = () => localStorage.getItem('theme') || 'auto';
        const applyTheme = (theme) => {
          const systemPrefersDark = systemDarkQuery.matches;
          const dark = theme === 'dark' || (theme === 'auto' && systemPrefersDark);
          html.classList.toggle('dark', dark);
        };
        // Apply immediately based on saved/system
        applyTheme(getSaved());
        // Bind toggle after DOM is ready
        window.addEventListener('DOMContentLoaded', () => {
          const themeToggle = document.getElementById('theme-toggle');
          themeToggle?.addEventListener('click', () => {
            const current = html.classList.contains('dark') ? 'light' : 'dark';
            localStorage.setItem('theme', current);
            applyTheme(current);
          });
        });
        // React to system changes when in auto
        systemDarkQuery.addEventListener('change', () => {
          if (getSaved() === 'auto') applyTheme('auto');
        });
      })();
    </script>
  </head>
  
  <body class="h-full bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <!-- Skip to main content -->
    <a 
      href="#main-content" 
      class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 
             bg-blue-600 text-white px-4 py-2 rounded-md z-50 
             focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
    >
      Skip to main content
    </a>

    <div class="min-h-full flex flex-col">
      <!-- Header -->
      <header class="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-40">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between items-center h-16">
            <!-- Logo -->
            <div class="flex items-center">
              <LogoLink href="/" size="small" client:load />
            </div>
            
            <!-- Search -->
            <div class="flex-1 max-w-lg mx-8">
              <ToolSearch
                placeholder="Search tools..."
                size="small"
                client:load
              />
            </div>
            
            <!-- Theme toggle -->
            <button 
              id="theme-toggle"
              type="button"
              class="p-2 rounded-lg text-gray-500 dark:text-gray-400 
                     hover:bg-gray-100 dark:hover:bg-gray-800
                     focus:outline-none focus:ring-2 focus:ring-blue-500"
              aria-label="Toggle theme"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
              </svg>
            </button>
          </div>
        </div>
      </header>

      <!-- Header Ad Placement -->
      <div class="bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 py-4">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <AdPlacement type="header" lazy={false} />
        </div>
      </div>

      <!-- Main content -->
      <main id="main-content" class="flex-1">
        <slot />
      </main>

      <!-- Footer -->
      <footer class="bg-gray-50 dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700">
        <!-- Footer Ad Placement -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <AdPlacement type="footer" lazy={true} />
        </div>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
            <div>
              <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider">Tools</h3>
              <ul class="mt-4 space-y-2">
                <li><a href="/formatters/json-formatter" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">JSON Formatter</a></li>
                <li><a href="/encoders/base64-encoder" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Base64 Encoder</a></li>
                <li><a href="/encoders/url-encoder" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">URL Encoder</a></li>
                <li><a href="/encoders/jwt-decoder" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">JWT Decoder</a></li>
              </ul>
            </div>
            <div>
              <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider">Categories</h3>
              <ul class="mt-4 space-y-2">
                <li><a href="/formatters" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Formatters</a></li>
                <li><a href="/converters" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Converters</a></li>
                <li><a href="/encoders" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Encoders</a></li>
                <li><a href="/text" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Text Tools</a></li>
              </ul>
            </div>
            <div>
              <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider">Support</h3>
              <ul class="mt-4 space-y-2">
                <li><a href="/about" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">About</a></li>
                <li><a href="/privacy" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Privacy Policy</a></li>
                <li><a href="/terms" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Terms of Service</a></li>
                <li><a href="/contact" class="text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600">Contact</a></li>
              </ul>
            </div>
            <div class="flex justify-center items-start">
              <AdPlacement type="sidebar" lazy={true} />
            </div>
          </div>
          <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
            <p class="text-sm text-gray-600 dark:text-gray-400 text-center">
              © 2024 FreeFormatHub. All rights reserved. Privacy-first developer tools.
            </p>
          </div>
        </div>
      </footer>
    </div>

    <!-- Cookie Consent Banner -->
    <CookieConsent client:load />

    <!-- Initialize app -->
    <script>
      import('../lib/init').then(({ initializeApp }) => {
        initializeApp();
      });
    </script>

    <!-- Theme toggle logic moved to <head> to minimize FOUC -->
  </body>
</html>
